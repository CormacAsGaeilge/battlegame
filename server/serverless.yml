service: battle-game-server
provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  memorySize: 256
  timeout: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
      Resource:
        - 'Fn::GetAtt': [PlayerTable, Arn]

plugins:
  - serverless-offline


functions:
  getPlayer:
    handler: handlers/apigw/player/get/index.handler
    events:
      - http:
          path: player/{uuid}
          method: get
          cors: true
  postPlayer:
    handler: handlers/apigw/player/post/index.handler
    events:
      - http:
          path: player
          method: post
          cors: true
  submitBattle:
    handler: handlers/apigw/battle/post/index.handler
    events:
      - http:
          path: player/{uuid}/battle
          method: post
          cors: true

  processBattleWorker:
    handler: handlers/sqs/process-battle-worker
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - BattlesQueue
              - Arn
          batchSize: 10

resources:
  Resources:
    BattlesQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: battles-queue
        VisibilityTimeout: 30
    PlayerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PlayerTable
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE